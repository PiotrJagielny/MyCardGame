{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DuelComponents\\\\DuelPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport './DuelPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DuelPage = () => {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const [cardsInHand, setCardsInHand] = useState([]);\n  const [cardsInDeck, setCardsInDeck] = useState([]);\n  const [cardsOnBoard, setCardsOnBoard] = useState([]);\n  const [pointsOnBoard, setPointsOnBoard] = useState();\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState();\n  const [cardsInHand2, setCardsInHand2] = useState([]);\n  const [cardsInDeck2, setCardsInDeck2] = useState([]);\n  const [cardsOnBoard2, setCardsOnBoard2] = useState([]);\n  const [pointsOnBoard2, setPointsOnBoard2] = useState();\n  const [isTurnOfPlayer2, setIsTurnOfPlayer2] = useState();\n  const [deckData, setDeckData] = useState([]);\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck').then(res => res.json()).then(deckData => {\n      setDeckData(deckData);\n    }).catch(console.error);\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  useEffect(() => {\n    const controller = new AbortController();\n    if (deckData.length > 0) {\n      fetch('http://localhost:8000/Duel/SetupDecks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(deckData),\n        signal: controller.signal\n      });\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [deckData]);\n  const fetchCardsData = () => {\n    fetch('http://localhost:8000/Duel/getHandCards_player1').then(res => res.json()).then(cardsInHand => {\n      setCardsInHand(cardsInHand);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getDeckCards_player1').then(res => res.json()).then(cardsInDeck => {\n      setCardsInDeck(cardsInDeck);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getBoardCards_player1').then(res => res.json()).then(cardsOnBoard => {\n      setCardsOnBoard(cardsOnBoard);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getBoardPoints_player1').then(res => res.json()).then(pointsOnBoard => {\n      setPointsOnBoard(pointsOnBoard);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/isTurnOf_player1').then(res => res.json()).then(isTurnOf_player1 => {\n      setIsTurnOfPlayer1(isTurnOf_player1);\n    }).catch(console.error);\n\n    // PLAYER 2\n\n    fetch('http://localhost:8000/Duel/getHandCards_player2').then(res => res.json()).then(cardsInHand2 => {\n      setCardsInHand2(cardsInHand2);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getDeckCards_player2').then(res => res.json()).then(cardsInDeck2 => {\n      setCardsInDeck2(cardsInDeck2);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getBoardCards_player2').then(res => res.json()).then(cardsOnBoard2 => {\n      setCardsOnBoard2(cardsOnBoard2);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/getBoardPoints_player2').then(res => res.json()).then(pointsOnBoard2 => {\n      setPointsOnBoard2(pointsOnBoard2);\n    }).catch(console.error);\n    fetch('http://localhost:8000/Duel/isTurnOf_player2').then(res => res.json()).then(isTurnOf_player2 => {\n      setIsTurnOfPlayer2(isTurnOf_player2);\n    }).catch(console.error);\n    setRefresh(true);\n  };\n  const onDragEnd_player1 = result => {\n    const {\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === \"Hand\") {\n      return;\n    }\n    let cardDragged = {\n      name: result.draggableId\n    };\n    fetch('http://localhost:8000/Duel/playCard_player1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardDragged)\n    });\n    fetchCardsData();\n  };\n  const onDragEnd_player2 = result => {\n    const {\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === \"Hand\") {\n      return;\n    }\n    let cardDragged = {\n      name: result.draggableId\n    };\n    fetch('http://localhost:8000/Duel/playCard_player2', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardDragged)\n    });\n    fetchCardsData();\n  };\n  const endRound_player1 = () => {\n    fetch('http://localhost:8000/Duel/endRound_player1', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: null\n    });\n  };\n  const endRound_player2 = () => {\n    fetch('http://localhost:8000/Duel/endRound_player2', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Let the battle begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCardsData,\n        children: \"Load data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Is your turn: \", isTurnOf_player1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endRound_player1,\n      children: \"End round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd_player1,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Hand\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HandContainerP1\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftHandContentP1\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightHandContainerP1\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsInHand.map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: card.name,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  ref: provided.innerRef,\n                  children: card.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this)\n              }, card.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Board\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainerP1\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContentP1\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Board: \", pointsOnBoard, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContentP1\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnBoard.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: card.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd_player2,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Board\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainerP2\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContentP2\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Board: \", pointsOnBoard2, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContentP2\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnBoard2.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: card.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Hand\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HandContainerP2\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftHandContentP2\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Hand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightHandContainerP2\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsInHand2.map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: card.name,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  ref: provided.innerRef,\n                  children: card.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this)\n              }, card.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Is your turn: \", isTurnOf_player2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endRound_player2,\n      children: \"End round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(DuelPage, \"JSxPXrXH6N5VBVJW414k4admL7U=\");\n_c = DuelPage;\nexport default DuelPage;\nvar _c;\n$RefreshReg$(_c, \"DuelPage\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DuelPage","_s","refresh","setRefresh","cardsInHand","setCardsInHand","cardsInDeck","setCardsInDeck","cardsOnBoard","setCardsOnBoard","pointsOnBoard","setPointsOnBoard","isTurnOfPlayer1","setIsTurnOfPlayer1","cardsInHand2","setCardsInHand2","cardsInDeck2","setCardsInDeck2","cardsOnBoard2","setCardsOnBoard2","pointsOnBoard2","setPointsOnBoard2","isTurnOfPlayer2","setIsTurnOfPlayer2","deckData","setDeckData","controller","AbortController","fetch","then","res","json","catch","console","error","abort","length","method","headers","body","JSON","stringify","signal","fetchCardsData","isTurnOf_player1","isTurnOf_player2","onDragEnd_player1","result","destination","droppableId","cardDragged","name","draggableId","onDragEnd_player2","endRound_player1","endRound_player2","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragEnd","provided","className","ref","innerRef","droppableProps","map","card","index","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DuelComponents/DuelPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Card} from './../Interfaces/Card';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './DuelPage.css';\r\n\r\nconst DuelPage = () => {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [cardsInHand, setCardsInHand] = useState<Card[]>([]);\r\n  const [cardsInDeck, setCardsInDeck] = useState<Card[]>([]);\r\n  const [cardsOnBoard, setCardsOnBoard] = useState<Card[]>([]);\r\n  const [pointsOnBoard, setPointsOnBoard] = useState<number>();\r\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState<boolean>();\r\n\r\n  const [cardsInHand2, setCardsInHand2] = useState<Card[]>([]);\r\n  const [cardsInDeck2, setCardsInDeck2] = useState<Card[]>([]);\r\n  const [cardsOnBoard2, setCardsOnBoard2] = useState<Card[]>([]);\r\n  const [pointsOnBoard2, setPointsOnBoard2] = useState<number>();\r\n  const [isTurnOfPlayer2, setIsTurnOfPlayer2] = useState<boolean>();\r\n\r\n\r\n\r\n  const [deckData, setDeckData] = useState<Card[]>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck')\r\n      .then((res) => res.json())\r\n      .then((deckData: Card[]) => {\r\n        setDeckData(deckData);\r\n      })\r\n      .catch(console.error);\r\n\r\n      return () => {\r\n        controller.abort();\r\n      };\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    if (deckData.length > 0) {\r\n      fetch('http://localhost:8000/Duel/SetupDecks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(deckData),\r\n        signal: controller.signal\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n\r\n  }, [deckData]);\r\n\r\n  const fetchCardsData = () => {\r\n\r\n    fetch('http://localhost:8000/Duel/getHandCards_player1')\r\n      .then((res) => res.json())\r\n      .then((cardsInHand: Card[]) => {\r\n        setCardsInHand(cardsInHand);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getDeckCards_player1')\r\n      .then((res) => res.json())\r\n      .then((cardsInDeck: Card[]) => {\r\n        setCardsInDeck(cardsInDeck);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getBoardCards_player1')\r\n      .then((res) => res.json())\r\n      .then((cardsOnBoard: Card[]) => {\r\n        setCardsOnBoard(cardsOnBoard);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getBoardPoints_player1')\r\n      .then((res) => res.json())\r\n      .then((pointsOnBoard: number) => {\r\n        setPointsOnBoard(pointsOnBoard);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/isTurnOf_player1')\r\n      .then((res) => res.json())\r\n      .then((isTurnOf_player1: boolean) => {\r\n        setIsTurnOfPlayer1(isTurnOf_player1);\r\n      })\r\n      .catch(console.error);\r\n\r\n      // PLAYER 2\r\n\r\n      fetch('http://localhost:8000/Duel/getHandCards_player2')\r\n      .then((res) => res.json())\r\n      .then((cardsInHand2: Card[]) => {\r\n        setCardsInHand2(cardsInHand2);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getDeckCards_player2')\r\n      .then((res) => res.json())\r\n      .then((cardsInDeck2: Card[]) => {\r\n        setCardsInDeck2(cardsInDeck2);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getBoardCards_player2')\r\n      .then((res) => res.json())\r\n      .then((cardsOnBoard2: Card[]) => {\r\n        setCardsOnBoard2(cardsOnBoard2);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/getBoardPoints_player2')\r\n      .then((res) => res.json())\r\n      .then((pointsOnBoard2: number) => {\r\n        setPointsOnBoard2(pointsOnBoard2);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch('http://localhost:8000/Duel/isTurnOf_player2')\r\n      .then((res) => res.json())\r\n      .then((isTurnOf_player2: boolean) => {\r\n        setIsTurnOfPlayer2(isTurnOf_player2);\r\n      })\r\n      .catch(console.error);\r\n\r\n    setRefresh(true);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onDragEnd_player1 = (result:DropResult) => {\r\n    const {destination} = result;\r\n    \r\n    if(!destination){return;}\r\n    if(destination.droppableId === \"Hand\"){return;}\r\n\r\n    let cardDragged: Card = {name: result.draggableId};\r\n    fetch('http://localhost:8000/Duel/playCard_player1', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(cardDragged)\r\n      });\r\n    fetchCardsData();\r\n  }\r\n\r\n  const onDragEnd_player2 = (result:DropResult) => {\r\n    const {destination} = result;\r\n    \r\n    if(!destination){return;}\r\n    if(destination.droppableId === \"Hand\"){return;}\r\n\r\n    let cardDragged: Card = {name: result.draggableId};\r\n    fetch('http://localhost:8000/Duel/playCard_player2', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(cardDragged)\r\n      });\r\n    fetchCardsData();\r\n  }\r\n\r\n  const endRound_player1 = () => {\r\n      fetch('http://localhost:8000/Duel/endRound_player1', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: null\r\n      });\r\n  }\r\n\r\n  const endRound_player2 = () => {\r\n    fetch('http://localhost:8000/Duel/endRound_player2', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: null\r\n      });\r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n      \r\n      <div>\r\n        <label>Let the battle begin</label>\r\n        <button onClick={fetchCardsData}>Load data</button>\r\n      </div>\r\n\r\n\r\n      {/* |||||||||||||||| TO JEST GRACZ 1 |||||||||||||||| */}\r\n      {/* <div>\r\n      <h4>Cards in deck remaining</h4>\r\n      <ul>\r\n       {cardsInDeck.map(card =>(\r\n            <li>{card.name}</li>\r\n        ))}\r\n      </ul>\r\n      </div> */}\r\n      <label>Is your turn: {isTurnOf_player1}</label>\r\n      <button onClick={endRound_player1}>End round</button>\r\n      <DragDropContext onDragEnd = {(onDragEnd_player1)}>\r\n        \r\n        <Droppable droppableId=\"Hand\">\r\n          {(provided) => (\r\n            <div className = \"HandContainerP1\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftHandContentP1\">\r\n                <h3>Hand</h3>\r\n              </div>\r\n              <div className=\"rightHandContainerP1\">\r\n                <ul>\r\n                  {cardsInHand.map((card, index) =>(\r\n                    <Draggable key={card.name} draggableId={card.name} index={index}>\r\n                      {(provided) => (\r\n                        <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                          {card.name}\r\n                        </li>    \r\n                      )}  \r\n                    </Draggable>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}  \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n          \r\n        \r\n        <Droppable droppableId=\"Board\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainerP1\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContentP1\">\r\n                <h3>Board: {pointsOnBoard} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContentP1\">\r\n                <ul>\r\n                  {cardsOnBoard.map((card, index) =>(\r\n                    <li>{card.name}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n\r\n      {/* |||||||||||||||| TO JEST GRACZ 2 |||||||||||||||| */}\r\n      \r\n      <DragDropContext onDragEnd = {(onDragEnd_player2)}>\r\n        \r\n\r\n      <Droppable droppableId=\"Board\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainerP2\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContentP2\">\r\n                <h3>Board: {pointsOnBoard2} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContentP2\">\r\n                <ul>\r\n                  {cardsOnBoard2.map((card, index) =>(\r\n                    <li>{card.name}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        <Droppable droppableId=\"Hand\">\r\n          {(provided) => (\r\n            <div className = \"HandContainerP2\" ref={provided.innerRef} {...provided.droppableProps}>\r\n            <div className=\"leftHandContentP2\">\r\n              <h3>Hand</h3>\r\n            </div>\r\n            <div className=\"rightHandContainerP2\">\r\n              <ul>\r\n                {cardsInHand2.map((card, index) =>(\r\n                  <Draggable key={card.name} draggableId={card.name} index={index}>\r\n                    {(provided) => (\r\n                      <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        {card.name}\r\n                      </li>    \r\n                    )}  \r\n                  </Draggable>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n              {provided.placeholder}  \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n          \r\n      </DragDropContext>\r\n      <label>Is your turn: {isTurnOf_player2}</label>\r\n      <button onClick={endRound_player2}>End round</button>\r\n\r\n      {/* <div>\r\n      <h4>Cards in deck remaining</h4>\r\n      <ul>\r\n       {cardsInDeck2.map(card =>(\r\n            <li>{card.name}</li>\r\n        ))}\r\n      </ul>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DuelPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}