{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DuelComponents\\\\DuelPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport HandComponent from './HandComponent';\nimport RowComponent from './RowComponent';\nimport './DuelPage.css';\nimport Modal from 'react-modal';\nimport CardComponent from '../CardComponent';\nimport { useSelector } from 'react-redux';\nimport SockJS from 'sockjs-client';\nimport { over } from 'stompjs';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nvar firstRow = 0;\nvar secondRow = 1;\nvar thirdRow = 2;\nvar rowStatusToImageUrl = new Map([[\"\", \"\"], [\"Rain\", \"https://parspng.com/wp-content/uploads/2022/06/rainpng.parspng.com-4.png\"]]);\nconst DuelPage = () => {\n  _s();\n  let navigate = useNavigate();\n  const [refresh, setRefresh] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isRowsModalOpen, setIsRowsModalOpen] = useState(false);\n  const [cardsInHand, setCardsInHand] = useState([]);\n  const [cardsOnBoard, setCardsOnBoard] = useState([]);\n  const [cardsOnSecondRow, setCardsOnSecondRow] = useState([]);\n  const [cardsOnThirdRow, setCardsOnThirdRow] = useState([]);\n  const [pointsOnRows, setPointsOnRows] = useState([]);\n  const [rowsStatus, setRowsStatus] = useState([]);\n  const [wonRounds, setWonRounds] = useState(0);\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState(false);\n  const [didWon, setDidWon] = useState(false);\n  const [enemyCardsOnFirstRow, setenemyCardsOnFirstRow] = useState([]);\n  const [enemyCardsOnSecondRow, setenemyCardsOnSecondRow] = useState([]);\n  const [enemyCardsOnThirdRow, setCardsOnThirdRow2] = useState([]);\n  const [enemyPointsOnBoard, setenemyPointsOnBoard] = useState(0);\n  const [enemyPointsOnRows, setEnemyPointsOnRows] = useState([]);\n  const [enemyWonRounds, setenemyWonRounds] = useState(0);\n  const [isEnemyTurn, setisEnemyTurn] = useState(false);\n  const [didEnemyWon, setdidEnemyWon] = useState(false);\n  const [enemyRowsStatus, setEnemyRowsStatus] = useState([]);\n  const [targetableCards, setTargetableCards] = useState([]);\n  const [affectableRows, setAffectableRows] = useState([]);\n  const [enemyName, setEnemyName] = useState(\"\");\n  const gameID = useSelector(state => state.gameID);\n  const userName = useSelector(state => state.userName);\n  const serverURL = useSelector(state => state.serverURL);\n  const connectToSocket = () => {\n    let Sock = new SockJS(serverURL + '/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnect);\n  };\n  const onConnect = () => {\n    stompClient.subscribe('/user/' + userName + '/game', onMessageReceived);\n  };\n  const onMessageReceived = payload => {\n    fetchCardsData();\n  };\n  useEffect(() => {\n    connectToSocket();\n    const controller = new AbortController();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  const fetchData = (url, data, setter) => {\n    fetch(url).then(res => res.json()).then(data => {\n      setter(data);\n    }).catch(console.error);\n  };\n  const fetchCardsData = () => {\n    fetch(`${serverURL}/Duel/getEnemyOf/${userName}/${gameID}`).then(res => res.text()).then(data => {\n      setEnemyName(data);\n      let userEnemy = data;\n      fetchData(`${serverURL}/Duel/getHandCards/${userName}/${gameID}`, cardsInHand, setCardsInHand);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userName}/${0}/${gameID}`, cardsOnBoard, setCardsOnBoard);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userName}/${1}/${gameID}`, cardsOnSecondRow, setCardsOnSecondRow);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userName}/${2}/${gameID}`, cardsOnThirdRow, setCardsOnThirdRow);\n      fetchData(`${serverURL}/Duel/isTurnOf/${userName}/${gameID}`, isTurnOfPlayer1, setIsTurnOfPlayer1);\n      fetchData(`${serverURL}/Duel/getWonRounds/${userName}/${gameID}`, wonRounds, setWonRounds);\n      fetchData(`${serverURL}/Duel/didWon/${userName}/${gameID}`, didWon, setDidWon);\n      fetchData(`${serverURL}/Duel/getRowsPoints/${userName}/${gameID}`, pointsOnRows, setPointsOnRows);\n      fetchData(`${serverURL}/Duel/getRowsStatus/${userName}/${gameID}`, rowsStatus, setRowsStatus);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${0}/${gameID}`, enemyCardsOnFirstRow, setenemyCardsOnFirstRow);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${1}/${gameID}`, enemyCardsOnSecondRow, setenemyCardsOnSecondRow);\n      fetchData(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${2}/${gameID}`, enemyCardsOnThirdRow, setCardsOnThirdRow2);\n      fetchData(`${serverURL}/Duel/isTurnOf/${userEnemy}/${gameID}`, isEnemyTurn, setisEnemyTurn);\n      fetchData(`${serverURL}/Duel/getWonRounds/${userEnemy}/${gameID}`, enemyWonRounds, setenemyWonRounds);\n      fetchData(`${serverURL}/Duel/didWon/${userEnemy}/${gameID}`, didEnemyWon, setdidEnemyWon);\n      fetchData(`${serverURL}/Duel/getRowsPoints/${userEnemy}/${gameID}`, enemyPointsOnRows, setEnemyPointsOnRows);\n      fetchData(`${serverURL}/Duel/getRowsStatus/${userEnemy}/${gameID}`, enemyRowsStatus, setEnemyRowsStatus);\n    }).then(() => {\n      if (wonRounds === enemyWonRounds && wonRounds === 2) {\n        alert(\"Draw\", \"https://c4.wallpaperflare.com/wallpaper/103/477/186/forest-light-nature-forest-wallpaper-preview.jpg\");\n      } else if (wonRounds === 2) {\n        alert(\"You won!\", \"https://png.pngtree.com/thumb_back/fh260/background/20220523/pngtree-stage-podium-with-rays-of-spotlights-for-award-ceremony-winner-with-image_1400291.jpg\");\n      } else if (enemyWonRounds === 2) {\n        alert(\"You lost!\", \"https://c4.wallpaperflare.com/wallpaper/33/477/228/rain-showers-forest-illustration-wallpaper-preview.jpg\");\n      }\n    }).catch(console.error);\n    setRefresh(true);\n  };\n  const alert = (msg, imageURL) => {\n    const alert = document.createElement('div');\n    alert.classList.add('alert');\n    const alertButton = document.createElement('button');\n    alertButton.innerText = 'Back to main menu';\n    alert.setAttribute('style', `\n      position: fixed;\n      top: 30%;\n      left:50%;\n      padding:20px;\n      border-radius: 10px;\n      box-shadow: 0 10px 5px 0 #00000022; \n      display:flex;\n      flex-direction:column;\n      background-image: url(${imageURL});\n      background-size: cover;\n      background-position: center;\n      height: 200px;\n      width: 200px;\n    `);\n    alertButton.setAttribute('style', `\n      border: 1px solidd #333;\n      background:white;\n      border-radius: 5px;\n      padding: 5px;\n    \n    `);\n    alert.innerHTML = `<span style=\"\n      font-size: 20px;\n      padding: 29%;\n      padding-left: 59px;\n      \">\n     ${msg}\n     </span>`;\n    alert.appendChild(alertButton);\n    alertButton.addEventListener('click', e => {\n      alert.remove();\n      navigate(\"/Main\");\n    });\n    document.body.appendChild(alert);\n  };\n  const [cardDragged, setCardDragged] = useState({\n    name: \"\",\n    points: 0\n  });\n  const [postOnRowNumberOf, setPostOnRowNumberOf] = useState(0);\n  const [cardAffected, setCardAffected] = useState({\n    name: \"points\",\n    points: 0\n  });\n  const handleModalClose = card => {\n    setIsModalOpen(false);\n    setCardAffected(card);\n  };\n  useEffect(() => {\n    fetch(`${serverURL}/Duel/getPossibleRowsToAffect/${gameID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardDragged)\n    }).then(async response => {\n      const possibleAffectedRows = await response.json();\n      await makeMove(possibleAffectedRows);\n    });\n  }, [cardAffected]);\n  const makeMove = async possibleAffectedRows => {\n    if (possibleAffectedRows.length === 0) {\n      playDraggedCard(`${serverURL}/Duel/playCard?userName=${userName}&affectedRow=${-1}&rowNumber=${postOnRowNumberOf}&gameID=${gameID}`, cardAffected);\n      fetchCardsData();\n    } else {\n      setAffectableRows(possibleAffectedRows);\n      setIsRowsModalOpen(true);\n    }\n  };\n  const handleRowsModalClose = affectedRow => {\n    playDraggedCard(`${serverURL}/Duel/playCard?userName=${userName}&affectedRow=${affectedRow}&rowNumber=${postOnRowNumberOf}&gameID=${gameID}`, cardAffected);\n    fetchCardsData();\n    setIsRowsModalOpen(false);\n  };\n  const onDragEndOf = (result, player) => {\n    const {\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === \"Hand\") {\n      return;\n    }\n    setPostOnRowNumberOf(-1);\n    if (destination.droppableId === \"BoardRow1\") {\n      setPostOnRowNumberOf(0);\n    } else if (destination.droppableId === \"BoardRow2\") {\n      setPostOnRowNumberOf(1);\n    } else if (destination.droppableId === \"BoardRow3\") {\n      setPostOnRowNumberOf(2);\n    }\n    setCardDragged({\n      name: result.draggableId,\n      points: 0\n    });\n  };\n  useEffect(() => {\n    fetch(`${serverURL}/Duel/getPossibleTargets/${userName}/${gameID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardDragged)\n    }).then(async response => {\n      const targetableCardsResponse = await response.json();\n      console.log(targetableCardsResponse);\n      await ensure(targetableCardsResponse);\n    });\n  }, [cardDragged]);\n  const ensure = async targetableCardsArg => {\n    if (targetableCardsArg.length === 0) {\n      setCardAffected({\n        name: \"noCard\",\n        points: 0\n      });\n    } else {\n      setTargetableCards(targetableCardsArg);\n      setIsModalOpen(true);\n    }\n  };\n  const playDraggedCard = async (postURL, cardTargetted) => {\n    const args = [cardDragged, cardTargetted];\n    fetch(postURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(args)\n    }).then(() => {\n      stompClient.send('/app/sendTrigger', {}, userName);\n    });\n  };\n  const endRoundFor = player => {\n    fetch(`${serverURL}/Duel/endRound/${player}/${gameID}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: null\n    }).then(() => {\n      stompClient.send('/app/sendTrigger', {}, userName);\n    });\n  };\n  const renderWonRounds = wonRoudnsOfPlayer => {\n    const wonRoundsDivs = [];\n    for (let i = 0; i < wonRoudnsOfPlayer; i++) {\n      wonRoundsDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons-png.flaticon.com/512/6941/6941697.png\",\n          style: {\n            width: 30,\n            height: 30\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 39\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 26\n      }, this));\n    }\n    if (wonRoundsDivs.length === 0) {\n      wonRoundsDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 30,\n          height: 30\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 26\n      }, this));\n    }\n    return wonRoundsDivs;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerName\",\n      children: [userName, \" : \", pointsOnRows.reduce((sum, e) => sum + e, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerInfo\",\n      children: isTurnOfPlayer1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn0.iconfinder.com/data/icons/crime-protection-people-rounded/110/Sword-512.png\",\n          style: {\n            width: 70,\n            height: 70\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enemy turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons-png.flaticon.com/512/1377/1377064.png\",\n          style: {\n            width: 70,\n            height: 70\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: fetchCardsData,\n        children: \"Load data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 30,\n        height: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => handleModalClose({\n        name: \"\",\n        points: 1\n      }),\n      style: {\n        content: {\n          width: '300px',\n          height: '200px',\n          background: 'gray'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a card to target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), targetableCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleModalClose(card);\n        },\n        children: /*#__PURE__*/_jsxDEV(CardComponent, {\n          name: card.name,\n          points: card.points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isRowsModalOpen,\n      onRequestClose: () => handleRowsModalClose(-1),\n      style: {\n        content: {\n          width: '300px',\n          height: '200px',\n          background: 'gray'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a row to traget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), affectableRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: '30px'\n        },\n        onClick: () => {\n          handleRowsModalClose(row);\n        },\n        children: row + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEndOf(result, userName),\n      children: [/*#__PURE__*/_jsxDEV(HandComponent, {\n        cardsInHand: cardsInHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: cardsOnThirdRow,\n        pointsOnRow: pointsOnRows[thirdRow],\n        rowDroppableId: \"BoardRow3\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[thirdRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: cardsOnSecondRow,\n        pointsOnRow: pointsOnRows[secondRow],\n        rowDroppableId: \"BoardRow2\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[secondRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: cardsOnBoard,\n        pointsOnRow: pointsOnRows[firstRow],\n        rowDroppableId: \"BoardRow1\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[firstRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wonRounds\",\n      children: renderWonRounds(wonRounds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardMiddle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"endRoundDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endRoundButton\",\n          onClick: () => endRoundFor(userName),\n          children: \"End round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wonRounds\",\n      children: renderWonRounds(enemyWonRounds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: () => {},\n      children: [/*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: enemyCardsOnFirstRow,\n        pointsOnRow: enemyPointsOnRows[firstRow],\n        rowDroppableId: \"BoardRow1\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[firstRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: enemyCardsOnSecondRow,\n        pointsOnRow: enemyPointsOnRows[secondRow],\n        rowDroppableId: \"BoardRow2\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[secondRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        cardsOnRow: enemyCardsOnThirdRow,\n        pointsOnRow: enemyPointsOnRows[thirdRow],\n        rowDroppableId: \"BoardRow3\",\n        rowStatusImageURL: rowStatusToImageUrl.get(rowsStatus[thirdRow]) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enemyName\",\n      children: [enemyName, \" : \", enemyPointsOnRows.reduce((sum, e) => sum + e, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s(DuelPage, \"hSw8avTdNm2sp7Zb9M2QPXoeOcA=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector];\n});\n_c = DuelPage;\nexport default DuelPage;\nvar _c;\n$RefreshReg$(_c, \"DuelPage\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","HandComponent","RowComponent","Modal","CardComponent","useSelector","SockJS","over","useNavigate","jsxDEV","_jsxDEV","stompClient","firstRow","secondRow","thirdRow","rowStatusToImageUrl","Map","DuelPage","_s","navigate","refresh","setRefresh","isModalOpen","setIsModalOpen","isRowsModalOpen","setIsRowsModalOpen","cardsInHand","setCardsInHand","cardsOnBoard","setCardsOnBoard","cardsOnSecondRow","setCardsOnSecondRow","cardsOnThirdRow","setCardsOnThirdRow","pointsOnRows","setPointsOnRows","rowsStatus","setRowsStatus","wonRounds","setWonRounds","isTurnOfPlayer1","setIsTurnOfPlayer1","didWon","setDidWon","enemyCardsOnFirstRow","setenemyCardsOnFirstRow","enemyCardsOnSecondRow","setenemyCardsOnSecondRow","enemyCardsOnThirdRow","setCardsOnThirdRow2","enemyPointsOnBoard","setenemyPointsOnBoard","enemyPointsOnRows","setEnemyPointsOnRows","enemyWonRounds","setenemyWonRounds","isEnemyTurn","setisEnemyTurn","didEnemyWon","setdidEnemyWon","enemyRowsStatus","setEnemyRowsStatus","targetableCards","setTargetableCards","affectableRows","setAffectableRows","enemyName","setEnemyName","gameID","state","userName","serverURL","connectToSocket","Sock","connect","onConnect","subscribe","onMessageReceived","payload","fetchCardsData","controller","AbortController","abort","fetchData","url","data","setter","fetch","then","res","json","catch","console","error","text","userEnemy","alert","msg","imageURL","document","createElement","classList","add","alertButton","innerText","setAttribute","innerHTML","appendChild","addEventListener","e","remove","body","cardDragged","setCardDragged","name","points","postOnRowNumberOf","setPostOnRowNumberOf","cardAffected","setCardAffected","handleModalClose","card","method","headers","JSON","stringify","response","possibleAffectedRows","makeMove","length","playDraggedCard","handleRowsModalClose","affectedRow","onDragEndOf","result","player","destination","droppableId","draggableId","targetableCardsResponse","log","ensure","targetableCardsArg","postURL","cardTargetted","args","send","endRoundFor","renderWonRounds","wonRoudnsOfPlayer","wonRoundsDivs","i","push","children","src","style","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","reduce","sum","onClick","isOpen","onRequestClose","content","background","map","index","row","fontSize","onDragEnd","cardsOnRow","pointsOnRow","rowDroppableId","rowStatusImageURL","get","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DuelComponents/DuelPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Card} from './../Interfaces/Card';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport HandComponent from './HandComponent';\r\nimport RowComponent from './RowComponent';\r\nimport './DuelPage.css';\r\nimport Modal from 'react-modal';\r\nimport CardComponent from '../CardComponent';\r\nimport {useSelector} from 'react-redux';\r\nimport StateData from './../../Game_Unrelated_Components/reactRedux/reducer';\r\nimport SockJS from 'sockjs-client';\r\nimport {over} from 'stompjs';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nvar stompClient:any = null;\r\nvar firstRow: number = 0;\r\nvar secondRow: number = 1;\r\nvar thirdRow: number = 2;\r\nvar rowStatusToImageUrl: Map<string,string> = new Map<string,string>([\r\n  [\"\", \"\"],\r\n  [\"Rain\", \"https://parspng.com/wp-content/uploads/2022/06/rainpng.parspng.com-4.png\"],\r\n]);\r\nconst DuelPage = () => {\r\n\r\n  let navigate = useNavigate();\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isRowsModalOpen, setIsRowsModalOpen] = useState(false);\r\n\r\n  const [cardsInHand, setCardsInHand] = useState<Card[]>([]);\r\n\r\n  const [cardsOnBoard, setCardsOnBoard] = useState<Card[]>([]);\r\n  const [cardsOnSecondRow, setCardsOnSecondRow] = useState<Card[]>([]);\r\n  const [cardsOnThirdRow, setCardsOnThirdRow] = useState<Card[]>([]);\r\n\r\n  const [pointsOnRows, setPointsOnRows] = useState<number[]>([]);\r\n  const [rowsStatus, setRowsStatus] = useState<string[]>([]);\r\n  const [wonRounds, setWonRounds] = useState<number>(0);\r\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState<boolean>(false);\r\n  const [didWon, setDidWon] = useState<boolean>(false);\r\n\r\n\r\n  const [enemyCardsOnFirstRow, setenemyCardsOnFirstRow] = useState<Card[]>([]);\r\n  const [enemyCardsOnSecondRow, setenemyCardsOnSecondRow] = useState<Card[]>([]);\r\n  const [enemyCardsOnThirdRow, setCardsOnThirdRow2] = useState<Card[]>([]);\r\n\r\n  const [enemyPointsOnBoard, setenemyPointsOnBoard] = useState<number>(0);\r\n  const [enemyPointsOnRows, setEnemyPointsOnRows] = useState<number[]>([]);\r\n  const [enemyWonRounds, setenemyWonRounds] = useState<number>(0);\r\n  const [isEnemyTurn, setisEnemyTurn] = useState<boolean>(false);\r\n  const [didEnemyWon, setdidEnemyWon] = useState<boolean>(false);\r\n  const [enemyRowsStatus, setEnemyRowsStatus] = useState<string[]>([]);\r\n\r\n  const [targetableCards, setTargetableCards] = useState<Card[]>([]);\r\n  const [affectableRows, setAffectableRows] = useState<number[]>([]);\r\n  const [enemyName, setEnemyName] = useState<string>(\"\");\r\n\r\n\r\n\r\n  const gameID = useSelector<StateData, string>((state) => state.gameID);\r\n  const userName= useSelector<StateData, string>((state) => state.userName);\r\n  const serverURL= useSelector<StateData, string>((state) => state.serverURL);\r\n\r\n\r\n\r\n\r\n  const connectToSocket= () =>{\r\n    let Sock = new SockJS(serverURL + '/ws');\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnect);\r\n  }\r\n  const onConnect = () => {\r\n    stompClient.subscribe('/user/' + userName + '/game', onMessageReceived );\r\n  }\r\n  const onMessageReceived = (payload: any) => {\r\n    fetchCardsData();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    connectToSocket();\r\n    const controller = new AbortController();\r\n      return () => {\r\n        controller.abort();\r\n      };\r\n  }, []);\r\n\r\n\r\n  const fetchData = <T,>(url: string,data: T ,setter: React.Dispatch<React.SetStateAction<T>>) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data: T) => {\r\n        setter(data);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n\r\n  \r\n  const fetchCardsData = () => {\r\n    fetch(`${serverURL}/Duel/getEnemyOf/${userName}/${gameID}`)\r\n      .then((res) => res.text())\r\n      .then((data: string) => {\r\n        setEnemyName(data);\r\n        let userEnemy:string = data;\r\n        fetchData<Card[]>(`${serverURL}/Duel/getHandCards/${userName}/${gameID}`, cardsInHand ,setCardsInHand);\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userName}/${0}/${gameID}`,cardsOnBoard ,setCardsOnBoard);\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userName}/${1}/${gameID}`, cardsOnSecondRow ,setCardsOnSecondRow);\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userName}/${2}/${gameID}`, cardsOnThirdRow ,setCardsOnThirdRow);\r\n        fetchData<boolean>(`${serverURL}/Duel/isTurnOf/${userName}/${gameID}`, isTurnOfPlayer1 ,setIsTurnOfPlayer1);\r\n        fetchData<number>(`${serverURL}/Duel/getWonRounds/${userName}/${gameID}`, wonRounds ,setWonRounds);\r\n        fetchData<boolean>(`${serverURL}/Duel/didWon/${userName}/${gameID}`, didWon ,setDidWon);\r\n        fetchData<number[]>(`${serverURL}/Duel/getRowsPoints/${userName}/${gameID}`, pointsOnRows,setPointsOnRows);\r\n        fetchData<string[]>(`${serverURL}/Duel/getRowsStatus/${userName}/${gameID}`, rowsStatus,setRowsStatus);\r\n\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${0}/${gameID}`,enemyCardsOnFirstRow ,setenemyCardsOnFirstRow);\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${1}/${gameID}`, enemyCardsOnSecondRow,setenemyCardsOnSecondRow);\r\n        fetchData<Card[]>(`${serverURL}/Duel/getCardsOnRow/${userEnemy}/${2}/${gameID}`, enemyCardsOnThirdRow ,setCardsOnThirdRow2);\r\n        fetchData<boolean>(`${serverURL}/Duel/isTurnOf/${userEnemy}/${gameID}`, isEnemyTurn ,setisEnemyTurn);\r\n        fetchData<number>(`${serverURL}/Duel/getWonRounds/${userEnemy}/${gameID}`, enemyWonRounds ,setenemyWonRounds);\r\n        fetchData<boolean>(`${serverURL}/Duel/didWon/${userEnemy}/${gameID}`, didEnemyWon ,setdidEnemyWon);\r\n        fetchData<number[]>(`${serverURL}/Duel/getRowsPoints/${userEnemy}/${gameID}`, enemyPointsOnRows,setEnemyPointsOnRows);\r\n        fetchData<string[]>(`${serverURL}/Duel/getRowsStatus/${userEnemy}/${gameID}`, enemyRowsStatus,setEnemyRowsStatus);\r\n\r\n      }).then(() => {\r\n        if(wonRounds === enemyWonRounds && wonRounds === 2) {\r\n          alert(\"Draw\",\"https://c4.wallpaperflare.com/wallpaper/103/477/186/forest-light-nature-forest-wallpaper-preview.jpg\" );\r\n        }\r\n        else if(wonRounds === 2) {\r\n          alert(\"You won!\",\"https://png.pngtree.com/thumb_back/fh260/background/20220523/pngtree-stage-podium-with-rays-of-spotlights-for-award-ceremony-winner-with-image_1400291.jpg\" );\r\n        }\r\n        else if(enemyWonRounds === 2) {\r\n          alert(\"You lost!\",\"https://c4.wallpaperflare.com/wallpaper/33/477/228/rain-showers-forest-illustration-wallpaper-preview.jpg\" );\r\n        }\r\n\r\n      })\r\n      .catch(console.error);\r\n\r\n    setRefresh(true);\r\n  }\r\n  const alert= (msg:string, imageURL:string) => {\r\n    const alert = document.createElement('div');\r\n    alert.classList.add('alert');\r\n    const alertButton = document.createElement('button');\r\n    alertButton.innerText = 'Back to main menu';\r\n    alert.setAttribute('style', `\r\n      position: fixed;\r\n      top: 30%;\r\n      left:50%;\r\n      padding:20px;\r\n      border-radius: 10px;\r\n      box-shadow: 0 10px 5px 0 #00000022; \r\n      display:flex;\r\n      flex-direction:column;\r\n      background-image: url(${imageURL});\r\n      background-size: cover;\r\n      background-position: center;\r\n      height: 200px;\r\n      width: 200px;\r\n    `);\r\n    alertButton.setAttribute('style', `\r\n      border: 1px solidd #333;\r\n      background:white;\r\n      border-radius: 5px;\r\n      padding: 5px;\r\n    \r\n    `);\r\n    alert.innerHTML= `<span style=\"\r\n      font-size: 20px;\r\n      padding: 29%;\r\n      padding-left: 59px;\r\n      \">\r\n     ${msg}\r\n     </span>`;\r\n    alert.appendChild(alertButton);\r\n    alertButton.addEventListener('click',(e) => {\r\n      alert.remove();\r\n      navigate(\"/Main\");\r\n    });\r\n    document.body.appendChild(alert);\r\n  }\r\n\r\n\r\n\r\n  const [cardDragged, setCardDragged] = useState<Card>({name: \"\", points: 0});\r\n  const [postOnRowNumberOf, setPostOnRowNumberOf] = useState<number>(0);\r\n  const [cardAffected, setCardAffected] = useState<Card>({name: \"points\", points: 0});\r\n  const handleModalClose = (card: Card) => {\r\n    setIsModalOpen(false);\r\n    setCardAffected(card);\r\n  };\r\n  useEffect(() => {\r\n    fetch(`${serverURL}/Duel/getPossibleRowsToAffect/${gameID}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(cardDragged)\r\n    }).then(async (response) => {\r\n\r\n      const possibleAffectedRows = await response.json();\r\n\r\n      await makeMove(possibleAffectedRows);\r\n\r\n    });\r\n\r\n  }, [cardAffected]);\r\n  \r\n\r\n  const makeMove = async (possibleAffectedRows: number[]) => {\r\n    if(possibleAffectedRows.length === 0) {\r\n      playDraggedCard(`${serverURL}/Duel/playCard?userName=${userName}&affectedRow=${-1}&rowNumber=${postOnRowNumberOf}&gameID=${gameID}`,  cardAffected);\r\n      fetchCardsData();\r\n    } \r\n    else {\r\n      setAffectableRows(possibleAffectedRows);\r\n      setIsRowsModalOpen(true);\r\n    } \r\n\r\n  }\r\n  const handleRowsModalClose = (affectedRow: number) => {\r\n    playDraggedCard(`${serverURL}/Duel/playCard?userName=${userName}&affectedRow=${affectedRow}&rowNumber=${postOnRowNumberOf}&gameID=${gameID}`,  cardAffected);\r\n    fetchCardsData();\r\n    setIsRowsModalOpen(false);\r\n  }\r\n\r\n\r\n  const onDragEndOf = (result:DropResult, player:string) => {\r\n    const {destination} = result;\r\n    \r\n    if(!destination){return;}\r\n    if(destination.droppableId === \"Hand\"){return;}\r\n\r\n    setPostOnRowNumberOf(-1);\r\n    if(destination.droppableId === \"BoardRow1\"){\r\n      setPostOnRowNumberOf(0);\r\n    }\r\n    else if(destination.droppableId === \"BoardRow2\"){\r\n      setPostOnRowNumberOf(1);\r\n    }\r\n    else if(destination.droppableId === \"BoardRow3\"){\r\n      setPostOnRowNumberOf(2);\r\n    }\r\n    setCardDragged({name: result.draggableId, points: 0});\r\n\r\n\r\n\r\n  }\r\n  useEffect( () => {\r\n    fetch(`${serverURL}/Duel/getPossibleTargets/${userName}/${gameID}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(cardDragged)\r\n    }).then(async (response) => {\r\n\r\n      const targetableCardsResponse= await response.json();\r\n      console.log(targetableCardsResponse);\r\n\r\n      await ensure(targetableCardsResponse);\r\n\r\n    });\r\n\r\n  }, [cardDragged])\r\n\r\n  const ensure = async (targetableCardsArg:Card[]) => {\r\n\r\n      if(targetableCardsArg.length === 0) {\r\n        setCardAffected({name: \"noCard\", points:0});\r\n      }\r\n      else {\r\n        setTargetableCards(targetableCardsArg);\r\n        setIsModalOpen(true);\r\n      }\r\n  }\r\n\r\n\r\n  const playDraggedCard = async (postURL: string, cardTargetted:Card) =>{\r\n    const args = [cardDragged, cardTargetted];\r\n    fetch(postURL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(args)\r\n      }).then( () => {\r\n        stompClient.send('/app/sendTrigger', {}, userName);\r\n      });\r\n  }\r\n\r\n  const endRoundFor = (player:string) => {\r\n    fetch(`${serverURL}/Duel/endRound/${player}/${gameID}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: null\r\n    }).then( () => {\r\n        stompClient.send('/app/sendTrigger', {}, userName);\r\n    });\r\n  }\r\n  const renderWonRounds = (wonRoudnsOfPlayer: number) => {\r\n    const wonRoundsDivs = [];\r\n    for(let i = 0 ; i < wonRoudnsOfPlayer; i++) {\r\n      wonRoundsDivs.push(<div key={i}><img src=\"https://cdn-icons-png.flaticon.com/512/6941/6941697.png\" style={{width: 30, height: 30}} alt=\"\"/></div>)\r\n    }\r\n    if(wonRoundsDivs.length === 0) {\r\n      wonRoundsDivs.push(<div style={{width: 30, height: 30}} > </div>)\r\n    }\r\n    return wonRoundsDivs;\r\n  } \r\n\r\n  return (\r\n    \r\n    <div>\r\n      <div className=\"playerName\">{userName} : {pointsOnRows.reduce((sum, e) => sum + e, 0)}</div>\r\n      <div className=\"playerInfo\">\r\n        {isTurnOfPlayer1?\r\n        <div>\r\n          <label >Your turn</label>\r\n          <img src=\"https://cdn0.iconfinder.com/data/icons/crime-protection-people-rounded/110/Sword-512.png\" style={{width: 70, height: 70}} alt=\"\"/>\r\n        </div>\r\n        :\r\n        <div>\r\n          <label >Enemy turn</label>\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/1377/1377064.png\" style={{width: 70, height: 70}} alt=\"\"/>\r\n        </div>\r\n        }\r\n\r\n      </div>\r\n      <div>\r\n        <button className=\"btn\"onClick={fetchCardsData}>Load data</button>\r\n      </div>\r\n      <div style={{width: 30, height: 50}} ></div>\r\n\r\n      \r\n      <Modal isOpen={isModalOpen} onRequestClose={() => handleModalClose({name: \"\", points: 1})}style={{content: {width:'300px', height:'200px', background:'gray',},}}>\r\n        <h2>Choose a card to target</h2>\r\n        {targetableCards.map((card, index) =>(\r\n          <button onClick= { () => {handleModalClose(card)} }><CardComponent  name={card.name} points={card.points}></CardComponent></button>\r\n        ))}\r\n      </Modal>\r\n      <Modal isOpen={isRowsModalOpen} onRequestClose={() => handleRowsModalClose(-1)} style={{content: {width:'300px', height:'200px', background:'gray',},}}>\r\n        <h2>Choose a row to traget</h2>\r\n        {affectableRows.map((row, index) =>(\r\n          <button style={{fontSize: '30px',}} onClick= { () => {handleRowsModalClose(row)} }>{row + 1}</button>\r\n        ))}\r\n      </Modal>\r\n\r\n      <DragDropContext onDragEnd = {(result) => onDragEndOf(result, userName)}>\r\n        <HandComponent cardsInHand = {cardsInHand}></HandComponent>\r\n\r\n        <RowComponent cardsOnRow = {cardsOnThirdRow} pointsOnRow={pointsOnRows[thirdRow]} rowDroppableId={\"BoardRow3\"} rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[thirdRow]) ||''}></RowComponent>\r\n        <RowComponent cardsOnRow = {cardsOnSecondRow} pointsOnRow={pointsOnRows[secondRow]} rowDroppableId={\"BoardRow2\"} rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[secondRow]) ||''}></RowComponent>\r\n        <RowComponent cardsOnRow = {cardsOnBoard} pointsOnRow={pointsOnRows[firstRow]} rowDroppableId={\"BoardRow1\"} rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[firstRow]) ||''}></RowComponent>\r\n      </DragDropContext>  \r\n        \r\n        <div className=\"wonRounds\">\r\n          {renderWonRounds(wonRounds)}\r\n        </div>\r\n        <div className=\"boardMiddle\">\r\n          <div className=\"separator\"></div>\r\n          <div className=\"endRoundDiv\"><button className=\"endRoundButton\"onClick={() => endRoundFor(userName)}>End round</button></div>\r\n        </div>\r\n        <div className=\"wonRounds\">\r\n          {renderWonRounds(enemyWonRounds)}\r\n        </div>\r\n      \r\n      <DragDropContext onDragEnd = {() => {}}>\r\n        <RowComponent cardsOnRow = {enemyCardsOnFirstRow} pointsOnRow={enemyPointsOnRows[firstRow]} rowDroppableId={\"BoardRow1\"}rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[firstRow]) ||''}></RowComponent>\r\n        <RowComponent cardsOnRow = {enemyCardsOnSecondRow} pointsOnRow={enemyPointsOnRows[secondRow]} rowDroppableId={\"BoardRow2\"}rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[secondRow]) ||''}></RowComponent>\r\n        <RowComponent cardsOnRow = {enemyCardsOnThirdRow} pointsOnRow={enemyPointsOnRows[thirdRow]} rowDroppableId={\"BoardRow3\"}rowStatusImageURL={rowStatusToImageUrl.get(rowsStatus[thirdRow]) ||''}></RowComponent>\r\n      </DragDropContext>\r\n      \r\n      \r\n      <div className=\"enemyName\">{enemyName} : {enemyPointsOnRows.reduce((sum, e) => sum + e, 0)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DuelPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}