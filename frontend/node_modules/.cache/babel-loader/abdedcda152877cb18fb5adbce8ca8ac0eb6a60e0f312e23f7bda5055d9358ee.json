{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DeckBuildingComponents\\\\DeckBuilderPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeckBuilderPage = () => {\n  _s();\n  const [CardsData, setCardsData] = useState();\n  useEffect(() => {\n    fetch('http://localhost:8000/DeckBuilder/GetAllCards').then(res => res.json()).then(CardsData => {\n      setCardsData(CardsData);\n    }).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"DeckBuilderPage \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this), CardsData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(DeckBuilderPage, \"DT3/s6Wlup7AEMyypd+/FYvc0rk=\");\n_c = DeckBuilderPage;\nexport default DeckBuilderPage;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilderPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DeckBuilderPage","_s","CardsData","setCardsData","fetch","then","res","json","catch","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DeckBuildingComponents/DeckBuilderPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\ninterface Card{\r\n    name: string;\r\n}\r\n\r\nconst DeckBuilderPage = () => {\r\n    const [CardsData, setCardsData] = useState<Card[]>();\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/DeckBuilder/GetAllCards')\r\n          .then(res => res.json())\r\n          .then((CardsData: Card[]) => {\r\n            setCardsData(CardsData);\r\n          })\r\n          .catch(console.error);\r\n      }, []);\r\n      \r\n    \r\n\r\n    return (\r\n        <div>\r\n            DeckBuilderPage <br/>\r\n\r\n            {CardsData.map(item => (\r\n                <div>\r\n                    <p>{item.name}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeckBuilderPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,EAAU;EAEpDC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEH,SAAiB,IAAK;MAC3BC,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC,CACDM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAIR,oBACIX,OAAA;IAAAY,QAAA,GAAK,kBACe,eAAAZ,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEpBb,SAAS,CAACc,GAAG,CAACC,IAAI,iBACflB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,EAAIM,IAAI,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAAd,EAAA,CAzBKD,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA2BrB,eAAeA,eAAe;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}