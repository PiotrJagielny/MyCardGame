{"ast":null,"code":"const initialState = () => {\n  return {\n    userNames: new Map(),\n    gameIDs: new Map(),\n    serverURL: \"\",\n    maxClientID: 0\n  };\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SET_USERNAME\":\n      const updatedUserNames = new Map(state.userNames);\n      updatedUserNames.set(action.payload.clientId, action.payload.content);\n      return {\n        ...state,\n        userNames: updatedUserNames\n      };\n    case \"SET_GAME_ID\":\n      const updatedGameIDs = new Map(state.gameIDs);\n      updatedGameIDs.set(action.payload.clientId, action.payload.content);\n      return {\n        ...state,\n        gameIds: updatedGameIDs\n      };\n    case \"SET_SERVER_URL\":\n      return {\n        ...state,\n        serverURL: action.payload.content\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","userNames","Map","gameIDs","serverURL","maxClientID","reducer","state","arguments","length","undefined","action","type","updatedUserNames","set","payload","clientId","content","updatedGameIDs","gameIds"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Unrelated_Components/reactRedux/reducer.ts"],"sourcesContent":["\r\n\r\n\r\n\r\ninterface StateData {\r\n    userNames: Map<number,string>;\r\n    gameIDs: Map<number,string>;\r\n    serverURL: string;\r\n    maxClientID: number;\r\n}\r\nconst initialState = () => {\r\n    return {\r\n        userNames: new  Map<number,string>(),\r\n        gameIDs: new  Map<number,string>(),\r\n        serverURL: \"\",\r\n        maxClientID: 0\r\n    }\r\n}\r\ninterface payload{\r\n    clientId: number;\r\n    content: string;\r\n}\r\nexport default StateData;\r\ntype Actionn = {type: string, payload:payload};\r\n\r\nexport const reducer = (state:StateData= initialState(), action:Actionn) => {\r\n    switch(action.type) {\r\n        case \"SET_USERNAME\":\r\n            const updatedUserNames = new Map(state.userNames);\r\n            updatedUserNames.set(action.payload.clientId, action.payload.content);\r\n            return {...state, userNames: updatedUserNames};\r\n        case \"SET_GAME_ID\":\r\n            const updatedGameIDs = new Map(state.gameIDs);\r\n            updatedGameIDs.set(action.payload.clientId, action.payload.content);\r\n            return {...state, gameIds: updatedGameIDs};\r\n        case \"SET_SERVER_URL\":\r\n            return {...state, serverURL: action.payload.content};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};"],"mappings":"AAUA,MAAMA,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAO;IACHC,SAAS,EAAE,IAAKC,GAAG,EAAiB;IACpCC,OAAO,EAAE,IAAKD,GAAG,EAAiB;IAClCE,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE;EACjB,CAAC;AACL,CAAC;AAQD,OAAO,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAqD;EAAA,IAApDC,KAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAER,YAAY,EAAE;EAAA,IAAEW,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAOC,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,MAAMC,gBAAgB,GAAG,IAAIX,GAAG,CAACK,KAAK,CAACN,SAAS,CAAC;MACjDY,gBAAgB,CAACC,GAAG,CAACH,MAAM,CAACI,OAAO,CAACC,QAAQ,EAAEL,MAAM,CAACI,OAAO,CAACE,OAAO,CAAC;MACrE,OAAO;QAAC,GAAGV,KAAK;QAAEN,SAAS,EAAEY;MAAgB,CAAC;IAClD,KAAK,aAAa;MACd,MAAMK,cAAc,GAAG,IAAIhB,GAAG,CAACK,KAAK,CAACJ,OAAO,CAAC;MAC7Ce,cAAc,CAACJ,GAAG,CAACH,MAAM,CAACI,OAAO,CAACC,QAAQ,EAAEL,MAAM,CAACI,OAAO,CAACE,OAAO,CAAC;MACnE,OAAO;QAAC,GAAGV,KAAK;QAAEY,OAAO,EAAED;MAAc,CAAC;IAC9C,KAAK,gBAAgB;MACjB,OAAO;QAAC,GAAGX,KAAK;QAAEH,SAAS,EAAEO,MAAM,CAACI,OAAO,CAACE;MAAO,CAAC;IACxD;MACI,OAAOV,KAAK;EAAC;AAGzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}