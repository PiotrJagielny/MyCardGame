{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DuelComponents\\\\RowComponent.tsx\";\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport './DuelPage.css';\nimport CardComponent from '../CardComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RowComponent = _ref => {\n  let {\n    cardsOnRow,\n    pointsOnRow,\n    rowDroppableId,\n    rowStatusImageURL\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: rowDroppableId,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BoardContainer\",\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftBoardContent\",\n          style: {\n            backgroundImage: `url(${rowStatusImageURL})`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [rowDroppableId, \": \", pointsOnRow, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightBoardContent\",\n          children: [cardsOnRow.map((card, index) => /*#__PURE__*/_jsxDEV(CardComponent, {\n            card: card,\n            isOnRow: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = RowComponent;\nexport default RowComponent;\nvar _c;\n$RefreshReg$(_c, \"RowComponent\");","map":{"version":3,"names":["React","Droppable","CardComponent","jsxDEV","_jsxDEV","RowComponent","_ref","cardsOnRow","pointsOnRow","rowDroppableId","rowStatusImageURL","children","droppableId","provided","className","ref","innerRef","droppableProps","style","backgroundImage","backgroundSize","backgroundPosition","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","isOnRow","placeholder","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DuelComponents/RowComponent.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Card} from './../Interfaces/Card';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport './DuelPage.css';\r\nimport CardComponent from '../CardComponent';\r\n\r\ninterface Props{\r\n    cardsOnRow: Card[];\r\n    pointsOnRow: number;\r\n    rowDroppableId: string;\r\n    rowStatusImageURL: string;\r\n}\r\n\r\nexport const RowComponent: React.FC<Props> = ({cardsOnRow, pointsOnRow, rowDroppableId, rowStatusImageURL}) => {\r\n    \r\n  return (\r\n    <div >\r\n        <Droppable droppableId={rowDroppableId} >\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\" style={{backgroundImage: `url(${rowStatusImageURL})`, backgroundSize:'cover', backgroundPosition:'center'}} >\r\n                <h3>{rowDroppableId}: {pointsOnRow} </h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\" >\r\n                  {cardsOnRow.map((card, index) =>(\r\n                        <CardComponent card={card} isOnRow = {true}></CardComponent>\r\n                  ))}\r\n              {provided.placeholder}    \r\n              </div>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowComponent"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,gBAAgB;AACvB,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS7C,OAAO,MAAMC,YAA6B,GAAGC,IAAA,IAAkE;EAAA,IAAjE;IAACC,UAAU;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAiB,CAAC,GAAAJ,IAAA;EAExG,oBACEF,OAAA;IAAAO,QAAA,eACIP,OAAA,CAACH,SAAS;MAACW,WAAW,EAAEH,cAAe;MAAAE,QAAA,EACnCE,QAAQ,iBACRT,OAAA;QAAKU,SAAS,EAAC,gBAAgB;QAACC,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAAA,GAAKH,QAAQ,CAACI,cAAc;QAAAN,QAAA,gBACjFP,OAAA;UAAKU,SAAS,EAAC,kBAAkB;UAACI,KAAK,EAAE;YAACC,eAAe,EAAG,OAAMT,iBAAkB,GAAE;YAAEU,cAAc,EAAC,OAAO;YAAEC,kBAAkB,EAAC;UAAQ,CAAE;UAAAV,QAAA,eAC3IP,OAAA;YAAAO,QAAA,GAAKF,cAAc,EAAC,IAAE,EAACD,WAAW,EAAC,GAAC;UAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrC,eACNrB,OAAA;UAAKU,SAAS,EAAC,mBAAmB;UAAAH,QAAA,GAC7BJ,UAAU,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBxB,OAAA,CAACF,aAAa;YAACyB,IAAI,EAAEA,IAAK;YAACE,OAAO,EAAI;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChD,CAAC,EACLZ,QAAQ,CAACiB,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAET;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEV,CAAC;AAAAM,EAAA,GArBY1B,YAA6B;AAuB1C,eAAeA,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}