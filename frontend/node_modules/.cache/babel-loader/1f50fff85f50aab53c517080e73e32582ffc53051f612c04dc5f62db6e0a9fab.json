{"ast":null,"code":"export const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    userName: \"\",\n    gameID: \"\",\n    serverURL: \"\"\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SET_USERNAME\":\n      return {\n        ...state,\n        userName: action.payload\n      };\n    case \"SET_GAME_ID\":\n      return {\n        ...state,\n        gameID: action.payload\n      };\n    case \"SET_SERVER_URL\":\n      return {\n        ...state,\n        serverURL: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = () => {\n  return {\n    userNames: new Map(),\n    gameIDs: new Map(),\n    serverURL: \"\"\n  };\n};\nexport const reduceri = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SET_USERNAME\":\n      const updatedUserNames = new Map(state.userNames);\n      updatedUserNames.set(action.payload.clientId, action.payload.content);\n      return {\n        ...state,\n        userNames: updatedUserNames\n      };\n    case \"SET_GAME_ID\":\n      const updatedGameIDs = new Map(state.gameIDs);\n      updatedGameIDs.set(action.payload.clientId, action.payload.content);\n      return {\n        ...state,\n        gameIds: updatedGameIDs\n      };\n    case \"SET_SERVER_URL\":\n      return {\n        ...state,\n        serverURL: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["reducer","state","arguments","length","undefined","userName","gameID","serverURL","action","type","payload","initialState","userNames","Map","gameIDs","reduceri","updatedUserNames","set","clientId","content","updatedGameIDs","gameIds"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Unrelated_Components/reactRedux/reducer.ts"],"sourcesContent":["interface StateData {\r\n    userName: string;\r\n    gameID: string;\r\n    serverURL: string;\r\n}\r\nexport default StateData;\r\ntype Action = {type: string, payload:string};\r\n\r\nexport const reducer = (state:StateData= {userName:\"\", gameID: \"\", serverURL: \"\"}, action:Action) => {\r\n    switch(action.type) {\r\n        case \"SET_USERNAME\":\r\n            return {...state, userName: action.payload};\r\n        case \"SET_GAME_ID\":\r\n            return {...state, gameID: action.payload};\r\n        case \"SET_SERVER_URL\":\r\n            return {...state, serverURL: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\ninterface StateDataa {\r\n    userNames: Map<number,string>;\r\n    gameIDs: Map<number,string>;\r\n    serverURL: string;\r\n}\r\nconst initialState = () => {\r\n    return {\r\n        userNames: new  Map<number,string>(),\r\n        gameIDs: new  Map<number,string>(),\r\n        serverURL: \"\"\r\n    }\r\n}\r\ninterface payload{\r\n    clientId: number;\r\n    content: string;\r\n}\r\n// export default StateDataa;\r\ntype Actionn = {type: string, payload:payload};\r\n\r\nexport const reduceri = (state:StateDataa= initialState(), action:Actionn) => {\r\n    switch(action.type) {\r\n        case \"SET_USERNAME\":\r\n            const updatedUserNames = new Map(state.userNames);\r\n            updatedUserNames.set(action.payload.clientId, action.payload.content);\r\n            return {...state, userNames: updatedUserNames};\r\n        case \"SET_GAME_ID\":\r\n            const updatedGameIDs = new Map(state.gameIDs);\r\n            updatedGameIDs.set(action.payload.clientId, action.payload.content);\r\n            return {...state, gameIds: updatedGameIDs};\r\n        case \"SET_SERVER_URL\":\r\n            return {...state, serverURL: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};"],"mappings":"AAQA,OAAO,MAAMA,OAAO,GAAG,SAAAA,CAAA,EAA8E;EAAA,IAA7EC,KAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAE;IAACG,QAAQ,EAAC,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAa,GAAAN,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5F,QAAOI,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAO;QAAC,GAAGR,KAAK;QAAEI,QAAQ,EAAEG,MAAM,CAACE;MAAO,CAAC;IAC/C,KAAK,aAAa;MACd,OAAO;QAAC,GAAGT,KAAK;QAAEK,MAAM,EAAEE,MAAM,CAACE;MAAO,CAAC;IAC7C,KAAK,gBAAgB;MACjB,OAAO;QAAC,GAAGT,KAAK;QAAEM,SAAS,EAAEC,MAAM,CAACE;MAAO,CAAC;IAChD;MACI,OAAOT,KAAK;EAAC;AAGzB,CAAC;AAOD,MAAMU,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAO;IACHC,SAAS,EAAE,IAAKC,GAAG,EAAiB;IACpCC,OAAO,EAAE,IAAKD,GAAG,EAAiB;IAClCN,SAAS,EAAE;EACf,CAAC;AACL,CAAC;AAQD,OAAO,MAAMQ,QAAQ,GAAG,SAAAA,CAAA,EAAsD;EAAA,IAArDd,KAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAES,YAAY,EAAE;EAAA,IAAEH,MAAc,GAAAN,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAOI,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,MAAMO,gBAAgB,GAAG,IAAIH,GAAG,CAACZ,KAAK,CAACW,SAAS,CAAC;MACjDI,gBAAgB,CAACC,GAAG,CAACT,MAAM,CAACE,OAAO,CAACQ,QAAQ,EAAEV,MAAM,CAACE,OAAO,CAACS,OAAO,CAAC;MACrE,OAAO;QAAC,GAAGlB,KAAK;QAAEW,SAAS,EAAEI;MAAgB,CAAC;IAClD,KAAK,aAAa;MACd,MAAMI,cAAc,GAAG,IAAIP,GAAG,CAACZ,KAAK,CAACa,OAAO,CAAC;MAC7CM,cAAc,CAACH,GAAG,CAACT,MAAM,CAACE,OAAO,CAACQ,QAAQ,EAAEV,MAAM,CAACE,OAAO,CAACS,OAAO,CAAC;MACnE,OAAO;QAAC,GAAGlB,KAAK;QAAEoB,OAAO,EAAED;MAAc,CAAC;IAC9C,KAAK,gBAAgB;MACjB,OAAO;QAAC,GAAGnB,KAAK;QAAEM,SAAS,EAAEC,MAAM,CAACE;MAAO,CAAC;IAChD;MACI,OAAOT,KAAK;EAAC;AAGzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}