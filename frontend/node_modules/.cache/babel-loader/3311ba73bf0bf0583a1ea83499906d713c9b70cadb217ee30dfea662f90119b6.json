{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DeckBuildingComponents\\\\DeckBuilderPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './DeckBuilderPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeckBuilderPage = () => {\n  _s();\n  const [cardsData, setCardsData] = useState([]);\n  const [cardsInDeck, setcardsInDeck] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/DeckBuilder/GetAllCards').then(res => res.json()).then(cardsData => {\n      setCardsData(cardsData);\n    }).catch(console.error);\n    console.log(cardsData);\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (destination === null) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"DeckBuilderPage \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All Cards:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"name\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AllCards\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [cardsData.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.name,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [item.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this)\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"name\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AllCardsInDeck\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [cardsInDeck.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.name,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                className: \"ggg\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [item.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this)\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DeckBuilderPage, \"sSBJUDUy0R/lp0B3gLjgLkDffQw=\");\n_c = DeckBuilderPage;\nexport default DeckBuilderPage;\nvar _c;\n$RefreshReg$(_c, \"DeckBuilderPage\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","DeckBuilderPage","_s","cardsData","setCardsData","cardsInDeck","setcardsInDeck","fetch","then","res","json","catch","console","error","log","onDragEnd","result","source","destination","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","className","ref","innerRef","droppableProps","map","item","index","draggableId","name","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DeckBuildingComponents/DeckBuilderPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\r\nimport  './DeckBuilderPage.css';\r\n\r\ninterface Card {\r\n  name: string;\r\n}\r\n\r\nconst DeckBuilderPage = () => {\r\n  const [cardsData, setCardsData] = useState<Card[]>([]);\r\n  const [cardsInDeck, setcardsInDeck] = useState<Card[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/DeckBuilder/GetAllCards')\r\n      .then((res) => res.json())\r\n      .then((cardsData: Card[]) => {\r\n        setCardsData(cardsData);\r\n      })\r\n      .catch(console.error);\r\n\r\n    console.log(cardsData);\r\n  }, []);\r\n\r\n\r\n  const onDragEnd = (result:DropResult) => {\r\n    const {source, destination} = result;\r\n    \r\n    if(destination ===null){\r\n      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      DeckBuilderPage <br />\r\n\r\n      <p>All Cards:</p>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"name\">\r\n          {(provided) => (\r\n            <div className=\"AllCards\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <ul>\r\n                {cardsData.map((item, index) => (\r\n                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                    {(provided) => (\r\n                      <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        <div>{item.name} </div>\r\n                        <br />\r\n                      </li>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        <Droppable droppableId=\"name\">\r\n          {(provided) => (\r\n            <div className=\"AllCardsInDeck\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <ul>\r\n                {cardsInDeck.map((item, index) => (\r\n                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                    {(provided) => (\r\n                      <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className=\"ggg\">\r\n                        <div>{item.name} </div>\r\n                        <br />\r\n                      </li>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckBuilderPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}