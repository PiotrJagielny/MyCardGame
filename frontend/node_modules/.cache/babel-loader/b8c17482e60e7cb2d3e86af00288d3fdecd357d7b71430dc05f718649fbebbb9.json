{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Unrelated_Components\\\\EntryPageComponents\\\\EntryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryPage = _ref => {\n  _s();\n  let {\n    clientId\n  } = _ref;\n  const [userName, setUserName] = useState(\"\");\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const connectToServer = () => {\n    dispatch({\n      type: \"SET_USERNAME\",\n      payload: {\n        clientId: clientId,\n        content: userName\n      }\n    });\n    dispatch({\n      type: \"SET_SERVER_URL\",\n      payload: 'http://localhost:8000'\n    });\n    navigate(\"/Main\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome to my card game! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"enter user name\",\n        value: userName,\n        name: \"username\",\n        onChange: event => {\n          setUserName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectToServer,\n        children: \"connect to server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EntryPage, \"57hIKY/ZaDryeprPdCxzjKD843k=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = EntryPage;\nexport default EntryPage;\nvar _c;\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"names":["React","useState","useNavigate","useDispatch","jsxDEV","_jsxDEV","EntryPage","_ref","_s","clientId","userName","setUserName","dispatch","navigate","connectToServer","type","payload","content","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","name","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Unrelated_Components/EntryPageComponents/EntryPage.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\ninterface Props{\r\n  clientId: number;\r\n}\r\n\r\n\r\nconst EntryPage: React.FC<Props> = ({clientId}) => {\r\n\r\n\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n\r\n  const connectToServer = () => {\r\n\r\n\r\n    dispatch({type: \"SET_USERNAME\", payload: {clientId:clientId,content:userName}});\r\n    dispatch({type: \"SET_SERVER_URL\", payload: 'http://localhost:8000'});\r\n    navigate(\"/Main\");\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        Welcome to my card game! <br />\r\n        <div>\r\n         <input id='user-name' placeholder='enter user name' value={userName} name='username' onChange={(event:any) => {setUserName(event.target.value)}}/>\r\n         <button onClick={connectToServer}>connect to server</button>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default EntryPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,WAAW,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxC,MAAMC,SAA0B,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAG5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMW,QAAQ,GAAGT,WAAW,EAAE;EAC9B,IAAIU,QAAQ,GAAGX,WAAW,EAAE;EAE5B,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAG5BF,QAAQ,CAAC;MAACG,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAE;QAACP,QAAQ,EAACA,QAAQ;QAACQ,OAAO,EAACP;MAAQ;IAAC,CAAC,CAAC;IAC/EE,QAAQ,CAAC;MAACG,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAuB,CAAC,CAAC;IACpEH,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAID,oBACER,OAAA;IAAAa,QAAA,GAAK,2BACwB,eAAAb,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/BjB,OAAA;MAAAa,QAAA,gBACCb,OAAA;QAAOkB,EAAE,EAAC,WAAW;QAACC,WAAW,EAAC,iBAAiB;QAACC,KAAK,EAAEf,QAAS;QAACgB,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAGC,KAAS,IAAK;UAACjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;QAAA;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClJjB,OAAA;QAAQyB,OAAO,EAAEhB,eAAgB;QAAAI,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAGV,CAAC;AAAAd,EAAA,CA5BKF,SAA0B;EAAA,QAKbH,WAAW,EACbD,WAAW;AAAA;AAAA6B,EAAA,GANtBzB,SAA0B;AA8BhC,eAAeA,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}