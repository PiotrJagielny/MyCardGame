{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DuelComponents\\\\DuelPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Droppable } from 'react-beautiful-dnd';\nimport HandComponent from './HandComponent';\nimport RowComponent from './RowComponent';\nimport './DuelPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DuelPage = () => {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const [cardsInHand, setCardsInHand] = useState([]);\n  const [cardsOnBoard, setCardsOnBoard] = useState([]);\n  const [cardsOnSecondRow, setCardsOnSecondRow] = useState([]);\n  const [cardsOnThirdRow, setCardsOnThirdRow] = useState([]);\n  const [pointsOnBoard, setPointsOnBoard] = useState(0);\n  const [wonRounds, setWonRounds] = useState(0);\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState(false);\n  const [didWon, setDidWon] = useState(false);\n  const [cardsInHand2, setCardsInHand2] = useState([]);\n  const [cardsOnBoard2, setCardsOnBoard2] = useState([]);\n  const [cardsOnSecondRow2, setCardsOnSecondRow2] = useState([]);\n  const [cardsOnThirdRow2, setCardsOnThirdRow2] = useState([]);\n  const [pointsOnBoard2, setPointsOnBoard2] = useState(0);\n  const [wonRounds2, setWonRounds2] = useState(0);\n  const [isTurnOfPlayer2, setIsTurnOfPlayer2] = useState(false);\n  const [didWon2, setDidWon2] = useState(false);\n  const [deckData, setDeckData] = useState([]);\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck').then(res => res.json()).then(deckData => {\n      setDeckData(deckData);\n    }).catch(console.error);\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  let firstPlayer = \"first\";\n  let secondPlayer = \"second\";\n  useEffect(() => {\n    const controller = new AbortController();\n    if (deckData.length > 0) {\n      fetch(`http://localhost:8000/Duel/SetupDecks?firstUser=${\"first\"}&secondUser=${\"second\"}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(deckData),\n        signal: controller.signal\n      });\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [deckData]);\n  const fetchCollection = (url, data, setter) => {\n    fetch(url).then(res => res.json()).then(data => {\n      setter(data);\n    }).catch(console.error);\n  };\n  const fetchElement = (url, data, setter) => {\n    fetch(url).then(res => res.json()).then(data => {\n      setter(data);\n    }).catch(console.error);\n  };\n  const fetchCardsData = () => {\n    fetchCollection(`http://localhost:8000/Duel/getHandCards/${firstPlayer}`, cardsInHand, setCardsInHand);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${0}`, cardsOnBoard, setCardsOnBoard);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${1}`, cardsOnSecondRow, setCardsOnSecondRow);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${2}`, cardsOnThirdRow, setCardsOnThirdRow);\n    fetchElement(`http://localhost:8000/Duel/getBoardPoints/${firstPlayer}`, pointsOnBoard, setPointsOnBoard);\n    fetchElement(`http://localhost:8000/Duel/isTurnOf/${firstPlayer}`, isTurnOfPlayer1, setIsTurnOfPlayer1);\n    fetchElement(`http://localhost:8000/Duel/getWonRounds/${firstPlayer}`, wonRounds, setWonRounds);\n    fetchElement(`http://localhost:8000/Duel/didWon/${firstPlayer}`, didWon, setDidWon);\n    fetchCollection(`http://localhost:8000/Duel/getHandCards/${secondPlayer}`, cardsInHand2, setCardsInHand2);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${0}`, cardsOnBoard2, setCardsOnBoard2);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${1}`, cardsOnSecondRow2, setCardsOnSecondRow2);\n    fetchCollection(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${2}`, cardsOnThirdRow2, setCardsOnThirdRow2);\n    fetchElement(`http://localhost:8000/Duel/getBoardPoints/${secondPlayer}`, pointsOnBoard2, setPointsOnBoard2);\n    fetchElement(`http://localhost:8000/Duel/isTurnOf/${secondPlayer}`, isTurnOfPlayer2, setIsTurnOfPlayer2);\n    fetchElement(`http://localhost:8000/Duel/getWonRounds/${secondPlayer}`, wonRounds2, setWonRounds2);\n    fetchElement(`http://localhost:8000/Duel/didWon/${secondPlayer}`, didWon2, setDidWon2);\n    setRefresh(true);\n  };\n  const onDragEndOf = (result, player) => {\n    const {\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === \"Hand\") {\n      return;\n    }\n    let cardDragged = {\n      name: result.draggableId,\n      points: 0\n    };\n    if (destination.droppableId === \"Board\") {\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${0}`, cardDragged);\n    } else if (destination.droppableId === \"BoardRow2\") {\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${1}`, cardDragged);\n    } else if (destination.droppableId === \"BoardRow3\") {\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${2}`, cardDragged);\n    }\n    fetchCardsData();\n  };\n  const playDraggedCard = (postURL, cardDragged) => {\n    fetch(postURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardDragged)\n    });\n  };\n  const endRoundFor = player => {\n    fetch(`http://localhost:8000/Duel/endRound?userName=${player}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: null\n    });\n  };\n  let secondRow = \"BoardRow2\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Let the battle begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCardsData,\n        children: \"Load data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => endRoundFor(firstPlayer),\n      children: \"End round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Did you won \", didWon.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Won rounds \", wonRounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Is your turn: \", isTurnOfPlayer1.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEndOf(result, firstPlayer),\n      children: [/*#__PURE__*/_jsxDEV(HandComponent, {\n        cardsInHand: cardsInHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowComponent, {\n        rowDroppableId: \"BoardRow3\",\n        cardsInRow: cardsOnThirdRow,\n        pointsOnRow: pointsOnBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: secondRow,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainer\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Row 2: \", pointsOnBoard, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnSecondRow.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [card.name, \", \", card.points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Board\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainer\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Board: \", pointsOnBoard, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnBoard.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [card.name, \", \", card.points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEndOf(result, secondPlayer),\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"Board\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainer\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Board: \", pointsOnBoard2, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnBoard2.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [card.name, \", \", card.points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"BoardRow2\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainer\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Row 2: \", pointsOnBoard2, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnSecondRow2.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [card.name, \", \", card.points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"BoardRow3\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoardContainer\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Row 3: \", pointsOnBoard2, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightBoardContent\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cardsOnThirdRow2.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [card.name, \", \", card.points]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HandComponent, {\n        cardsInHand: cardsInHand2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Is your turn: \", isTurnOfPlayer2.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Won rounds \", wonRounds2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Did you won \", didWon2.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => endRoundFor(secondPlayer),\n      children: \"End round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(DuelPage, \"IEOrrfnRFcdKdf8wG5UsTXGer6s=\");\n_c = DuelPage;\nexport default DuelPage;\nvar _c;\n$RefreshReg$(_c, \"DuelPage\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","HandComponent","RowComponent","jsxDEV","_jsxDEV","DuelPage","_s","refresh","setRefresh","cardsInHand","setCardsInHand","cardsOnBoard","setCardsOnBoard","cardsOnSecondRow","setCardsOnSecondRow","cardsOnThirdRow","setCardsOnThirdRow","pointsOnBoard","setPointsOnBoard","wonRounds","setWonRounds","isTurnOfPlayer1","setIsTurnOfPlayer1","didWon","setDidWon","cardsInHand2","setCardsInHand2","cardsOnBoard2","setCardsOnBoard2","cardsOnSecondRow2","setCardsOnSecondRow2","cardsOnThirdRow2","setCardsOnThirdRow2","pointsOnBoard2","setPointsOnBoard2","wonRounds2","setWonRounds2","isTurnOfPlayer2","setIsTurnOfPlayer2","didWon2","setDidWon2","deckData","setDeckData","controller","AbortController","fetch","then","res","json","catch","console","error","abort","firstPlayer","secondPlayer","length","method","headers","body","JSON","stringify","signal","fetchCollection","url","data","setter","fetchElement","fetchCardsData","onDragEndOf","result","player","destination","droppableId","cardDragged","name","draggableId","points","playDraggedCard","postURL","endRoundFor","secondRow","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toString","onDragEnd","rowDroppableId","cardsInRow","pointsOnRow","provided","className","ref","innerRef","droppableProps","map","card","index","placeholder","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DuelComponents/DuelPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Card} from './../Interfaces/Card';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport HandComponent from './HandComponent';\r\nimport RowComponent from './RowComponent';\r\nimport './DuelPage.css';\r\n\r\nconst DuelPage = () => {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [cardsInHand, setCardsInHand] = useState<Card[]>([]);\r\n\r\n  const [cardsOnBoard, setCardsOnBoard] = useState<Card[]>([]);\r\n  const [cardsOnSecondRow, setCardsOnSecondRow] = useState<Card[]>([]);\r\n  const [cardsOnThirdRow, setCardsOnThirdRow] = useState<Card[]>([]);\r\n\r\n  const [pointsOnBoard, setPointsOnBoard] = useState<number>(0);\r\n  const [wonRounds, setWonRounds] = useState<number>(0);\r\n  const [isTurnOfPlayer1, setIsTurnOfPlayer1] = useState<boolean>(false);\r\n  const [didWon, setDidWon] = useState<boolean>(false);\r\n\r\n  const [cardsInHand2, setCardsInHand2] = useState<Card[]>([]);\r\n\r\n  const [cardsOnBoard2, setCardsOnBoard2] = useState<Card[]>([]);\r\n  const [cardsOnSecondRow2, setCardsOnSecondRow2] = useState<Card[]>([]);\r\n  const [cardsOnThirdRow2, setCardsOnThirdRow2] = useState<Card[]>([]);\r\n\r\n  const [pointsOnBoard2, setPointsOnBoard2] = useState<number>(0);\r\n  const [wonRounds2, setWonRounds2] = useState<number>(0);\r\n  const [isTurnOfPlayer2, setIsTurnOfPlayer2] = useState<boolean>(false);\r\n  const [didWon2, setDidWon2] = useState<boolean>(false);\r\n\r\n\r\n\r\n  const [deckData, setDeckData] = useState<Card[]>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck')\r\n      .then((res) => res.json())\r\n      .then((deckData: Card[]) => {\r\n        setDeckData(deckData);\r\n      })\r\n      .catch(console.error);\r\n\r\n      return () => {\r\n        controller.abort();\r\n      };\r\n  }, []);\r\n  let firstPlayer:string = \"first\";\r\n  let secondPlayer:string = \"second\";\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    if (deckData.length > 0) {\r\n      fetch(`http://localhost:8000/Duel/SetupDecks?firstUser=${\"first\"}&secondUser=${\"second\"}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(deckData),\r\n        signal: controller.signal\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n\r\n  }, [deckData]);\r\n\r\n  const fetchCollection = <T,>(url: string,data: T[] ,setter: React.Dispatch<React.SetStateAction<T[]>>) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data: T[]) => {\r\n        setter(data);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  const fetchElement = <T,>(url: string,data: T ,setter: React.Dispatch<React.SetStateAction<T>>) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data: T) => {\r\n        setter(data);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  \r\n  const fetchCardsData = () => {\r\n\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getHandCards/${firstPlayer}`, cardsInHand ,setCardsInHand);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${0}`,cardsOnBoard ,setCardsOnBoard);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${1}`, cardsOnSecondRow ,setCardsOnSecondRow);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${firstPlayer}/${2}`, cardsOnThirdRow ,setCardsOnThirdRow);\r\n\r\n    fetchElement<number>(`http://localhost:8000/Duel/getBoardPoints/${firstPlayer}`, pointsOnBoard ,setPointsOnBoard);\r\n    fetchElement<boolean>(`http://localhost:8000/Duel/isTurnOf/${firstPlayer}`, isTurnOfPlayer1 ,setIsTurnOfPlayer1);\r\n    fetchElement<number>(`http://localhost:8000/Duel/getWonRounds/${firstPlayer}`, wonRounds ,setWonRounds);\r\n    fetchElement<boolean>(`http://localhost:8000/Duel/didWon/${firstPlayer}`, didWon ,setDidWon);\r\n\r\n\r\n\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getHandCards/${secondPlayer}`, cardsInHand2 ,setCardsInHand2);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${0}`,cardsOnBoard2 ,setCardsOnBoard2);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${1}`, cardsOnSecondRow2 ,setCardsOnSecondRow2);\r\n    fetchCollection<Card>(`http://localhost:8000/Duel/getCardsOnRow/${secondPlayer}/${2}`, cardsOnThirdRow2 ,setCardsOnThirdRow2);\r\n\r\n    fetchElement<number>(`http://localhost:8000/Duel/getBoardPoints/${secondPlayer}`, pointsOnBoard2 ,setPointsOnBoard2);\r\n    fetchElement<boolean>(`http://localhost:8000/Duel/isTurnOf/${secondPlayer}`, isTurnOfPlayer2 ,setIsTurnOfPlayer2);\r\n    fetchElement<number>(`http://localhost:8000/Duel/getWonRounds/${secondPlayer}`, wonRounds2 ,setWonRounds2);\r\n    fetchElement<boolean>(`http://localhost:8000/Duel/didWon/${secondPlayer}`, didWon2 ,setDidWon2);\r\n\r\n    setRefresh(true);\r\n  }\r\n\r\n\r\n  const onDragEndOf = (result:DropResult, player:string) => {\r\n    const {destination} = result;\r\n    \r\n    if(!destination){return;}\r\n    if(destination.droppableId === \"Hand\"){return;}\r\n\r\n    let cardDragged: Card = {name: result.draggableId, points: 0};\r\n    if(destination.droppableId === \"Board\"){\r\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${0}`, cardDragged);\r\n    }\r\n    else if(destination.droppableId === \"BoardRow2\"){\r\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${1}`, cardDragged);\r\n    }\r\n    else if(destination.droppableId === \"BoardRow3\"){\r\n      playDraggedCard(`http://localhost:8000/Duel/playCard?userName=${player}&rowNumber=${2}`, cardDragged);\r\n    }\r\n    \r\n    fetchCardsData();\r\n  }\r\n\r\n  const playDraggedCard = (postURL: string, cardDragged:Card) =>{\r\n    fetch(postURL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(cardDragged)\r\n      });\r\n  }\r\n\r\n  const endRoundFor = (player:string) => {\r\n    fetch(`http://localhost:8000/Duel/endRound?userName=${player}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: null\r\n    });\r\n}\r\n\r\nlet secondRow:string = \"BoardRow2\";\r\n\r\n  return (\r\n    \r\n    <div>\r\n      \r\n      <div>\r\n        <label>Let the battle begin</label>\r\n        <button onClick={fetchCardsData}>Load data</button>\r\n      </div>\r\n      \r\n      <button onClick={() => endRoundFor(firstPlayer)}>End round</button>\r\n      <p>Did you won {didWon.toString()}</p>\r\n      <p>Won rounds {wonRounds}</p>\r\n      <label>Is your turn: {isTurnOfPlayer1.toString()}</label>\r\n\r\n      <DragDropContext onDragEnd = {(result) => onDragEndOf(result, firstPlayer)}>\r\n        \r\n        <HandComponent cardsInHand = {cardsInHand}></HandComponent>\r\n\r\n        <RowComponent rowDroppableId={\"BoardRow3\"} cardsInRow = {cardsOnThirdRow} pointsOnRow={pointsOnBoard}></RowComponent>\r\n        <Droppable droppableId={secondRow}>\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\">\r\n                <h3>Row 2: {pointsOnBoard} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\">\r\n                <ul>\r\n                  {cardsOnSecondRow.map((card, index) =>(\r\n                    <li>{card.name}, {card.points}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable droppableId=\"Board\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\">\r\n                <h3>Board: {pointsOnBoard} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\">\r\n                <ul>\r\n                  {cardsOnBoard.map((card, index) =>(\r\n                    <li>{card.name}, {card.points}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>  \r\n        \r\n\r\n      {/* |||||||||||||||| TO JEST GRACZ 2 |||||||||||||||| */}\r\n      \r\n      <DragDropContext onDragEnd = {(result) => onDragEndOf(result, secondPlayer)}>\r\n        \r\n              \r\n      <Droppable droppableId=\"Board\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\">\r\n                <h3>Board: {pointsOnBoard2} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\">\r\n                <ul>\r\n                  {cardsOnBoard2.map((card, index) =>(\r\n                    <li>{card.name}, {card.points}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        <Droppable droppableId=\"BoardRow2\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\">\r\n                <h3>Row 2: {pointsOnBoard2} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\">\r\n                <ul>\r\n                  {cardsOnSecondRow2.map((card, index) =>(\r\n                    <li>{card.name}, {card.points}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable droppableId=\"BoardRow3\">\r\n          {(provided) => (\r\n            <div className=\"BoardContainer\" ref={provided.innerRef} {...provided.droppableProps}>\r\n              <div className=\"leftBoardContent\">\r\n                <h3>Row 3: {pointsOnBoard2} points</h3>\r\n              </div>\r\n              <div className=\"rightBoardContent\">\r\n                <ul>\r\n                  {cardsOnThirdRow2.map((card, index) =>(\r\n                    <li>{card.name}, {card.points}</li>    \r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              {provided.placeholder}    \r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        <HandComponent cardsInHand = {cardsInHand2}></HandComponent>\r\n          \r\n      </DragDropContext>\r\n      \r\n      <label>Is your turn: {isTurnOfPlayer2.toString()}</label>\r\n      <p>Won rounds {wonRounds2}</p>\r\n      <p>Did you won {didWon2.toString()}</p>\r\n      <button onClick={() => endRoundFor(secondPlayer)}>End round</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DuelPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}