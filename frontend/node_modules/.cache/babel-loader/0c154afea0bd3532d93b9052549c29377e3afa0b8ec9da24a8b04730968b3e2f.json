{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Related_Components\\\\DuelComponents\\\\DuelPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DuelPage = () => {\n  _s();\n  const [cardsInHand, setCardsInHand] = useState([]);\n  const fetchCardsData = () => {\n    fetch('http://localhost:8000/DeckBuilder/GetAllCards').then(res => res.json()).then(cardsData => {\n      setCardsData(cardsData);\n    }).catch(console.error);\n    fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck').then(res => res.json()).then(cardsInDeck => {\n      setCardsInDeck(cardsInDeck);\n    }).catch(console.error);\n    setRefresh(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let the battle begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DuelPage, \"h+uiIeuEjuEl4Sv55OR23+0R8As=\");\n_c = DuelPage;\nexport default DuelPage;\nvar _c;\n$RefreshReg$(_c, \"DuelPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DuelPage","_s","cardsInHand","setCardsInHand","useState","fetchCardsData","fetch","then","res","json","cardsData","setCardsData","catch","console","error","cardsInDeck","setCardsInDeck","setRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Related_Components/DuelComponents/DuelPage.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Card} from './../Interfaces/Card';\r\n\r\nconst DuelPage = () => {\r\n\r\n\r\n  const [cardsInHand, setCardsInHand] = useState<Card[]>([]);\r\n\r\n  const fetchCardsData = () => {\r\n    fetch('http://localhost:8000/DeckBuilder/GetAllCards')\r\n      .then((res) => res.json())\r\n      .then((cardsData: Card[]) => {\r\n        setCardsData(cardsData);\r\n      })\r\n      .catch(console.error);\r\n\r\n      fetch('http://localhost:8000/DeckBuilder/GetCardsInDeck')\r\n      .then((res) => res.json())\r\n      .then((cardsInDeck: Card[]) => {\r\n        setCardsInDeck(cardsInDeck);\r\n      })\r\n      .catch(console.error);\r\n\r\n      setRefresh(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Let the battle begin</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DuelPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAS,EAAE,CAAC;EAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BC,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,SAAiB,IAAK;MAC3BC,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC,CACDE,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IAErBR,KAAK,CAAC,kDAAkD,CAAC,CACxDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEQ,WAAmB,IAAK;MAC7BC,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC,CAAC,CACDH,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IAErBG,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEV,CAAC;AAAArB,EAAA,CA5BKD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}