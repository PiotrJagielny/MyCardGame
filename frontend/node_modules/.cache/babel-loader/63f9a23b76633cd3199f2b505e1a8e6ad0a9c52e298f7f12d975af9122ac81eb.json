{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files (x86)\\\\GitHub\\\\MyCardGame\\\\frontend\\\\src\\\\Game_Unrelated_Components\\\\EntryPageComponents\\\\EntryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport './EntryPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntryPage = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const connectToServer = () => {\n    dispatch({\n      type: \"SET_USERNAME\",\n      payload: userName\n    });\n    // dispatch({type: \"SET_SERVER_URL\", payload: 'http://localhost:8000'});\n    dispatch({\n      type: \"SET_SERVER_URL\",\n      payload: 'https://card-game-9dmt.onrender.com'\n    });\n    navigate(\"/Main\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EntryPageBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to my card game! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"You can build deck, as well as play duel with yourself. If you click find enemy two times you will start game with yourself. I made it so that you can test playing duel because there arent many people that play my game. As this is hosted for free, all api calls are very slow. To enter deck builder there is some waiting. To play game with yourself at duel page, you have to sometime do refreshing and loading data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        type: \"text\",\n        required: true,\n        value: userName,\n        name: \"username\",\n        onChange: event => {\n          setUserName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"enter user name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connectBtn\",\n      onClick: connectToServer,\n      children: \"connect to server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EntryPage, \"57hIKY/ZaDryeprPdCxzjKD843k=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = EntryPage;\nexport default EntryPage;\nvar _c;\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"names":["React","useState","useNavigate","useDispatch","jsxDEV","_jsxDEV","EntryPage","_s","userName","setUserName","dispatch","navigate","connectToServer","type","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","required","value","name","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["D:/Program Files (x86)/GitHub/MyCardGame/frontend/src/Game_Unrelated_Components/EntryPageComponents/EntryPage.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\nimport './EntryPage.css'\r\n\r\n\r\n\r\nconst EntryPage = () => {\r\n\r\n\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n\r\n  const connectToServer = () => {\r\n\r\n\r\n\r\n    dispatch({type:\"SET_USERNAME\", payload: userName});\r\n    // dispatch({type: \"SET_SERVER_URL\", payload: 'http://localhost:8000'});\r\n    dispatch({type: \"SET_SERVER_URL\", payload: 'https://card-game-9dmt.onrender.com'});\r\n    navigate(\"/Main\");\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EntryPageBody\">\r\n      <div>\r\n        <h1>\r\n          Welcome to my card game! <br />\r\n        </h1>\r\n        <h6>You can build deck, as well as play duel with yourself. If you click find enemy two times you will start game with yourself.\r\n          I made it so that you can test playing duel because there arent many people that play my game. As this is hosted for free, all api calls are very slow. To enter deck \r\n          builder there is some waiting. To play game with yourself at duel page, you have to sometime do refreshing and loading data.\r\n        </h6>\r\n\r\n      </div>\r\n        <div className=\"inputBox\">\r\n\r\n          <input id='user-name'  type=\"text\" required \r\n          value={userName} name='username' \r\n          onChange={(event:any) => {setUserName(event.target.value)}}/>\r\n\r\n          <span>enter user name</span>\r\n        </div>\r\n\r\n         <button className=\"connectBtn\" onClick={connectToServer}>connect to server</button>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default EntryPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,WAAW,QAAO,aAAa;AACvC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIxB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMS,QAAQ,GAAGP,WAAW,EAAE;EAC9B,IAAIQ,QAAQ,GAAGT,WAAW,EAAE;EAE5B,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAI5BF,QAAQ,CAAC;MAACG,IAAI,EAAC,cAAc;MAAEC,OAAO,EAAEN;IAAQ,CAAC,CAAC;IAClD;IACAE,QAAQ,CAAC;MAACG,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAE;IAAqC,CAAC,CAAC;IAClFH,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAID,oBACEN,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,GAAI,2BACuB,eAAAX,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B,eACLf,OAAA;QAAAW,QAAA,EAAI;MAGJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAED,eACJf,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAEvBX,OAAA;QAAOgB,EAAE,EAAC,WAAW;QAAER,IAAI,EAAC,MAAM;QAACS,QAAQ;QAC3CC,KAAK,EAAEf,QAAS;QAACgB,IAAI,EAAC,UAAU;QAChCC,QAAQ,EAAGC,KAAS,IAAK;UAACjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;QAAA;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAE7Df,OAAA;QAAAW,QAAA,EAAM;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB,eAELf,OAAA;MAAQU,SAAS,EAAC,YAAY;MAACa,OAAO,EAAEhB,eAAgB;MAAAI,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClF;AAGV,CAAC;AAAAb,EAAA,CA7CKD,SAAS;EAAA,QAKIH,WAAW,EACbD,WAAW;AAAA;AAAA2B,EAAA,GANtBvB,SAAS;AA+Cf,eAAeA,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}